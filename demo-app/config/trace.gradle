def time = 10

def atraceName = 'a.trace'

def systraceName = 'a.html'

def atraceSdcard = '/sdcard/a.trace'

def traceDir = project.buildDir.toPath()
        .resolve('trace')

def atraceProject = traceDir
        .resolve(atraceName)

def systraceProject = traceDir
        .resolve(systraceName)

def sdkDir = new File(System.getenv('ANDROID_HOME')).toPath()

def systracePython = sdkDir
        .resolve('platform-tools')
        .resolve('systrace')
        .resolve('systrace.py')

def apkFile = project.buildDir.toPath()
        .resolve('outputs')
        .resolve('apk')
        .resolve('debug')
        .resolve("$project.name-debug.apk")


task testDepends() {
    if (!apkFile.toFile().exists()) {
        dependsOn ":$project.name:installDebug"
    }
}

task testAtrace(type: Exec, dependsOn: testDepends) {
    commandLine 'adb', 'shell', 'atrace',
            '-t', "$time",
            '-a', "${gradle.ext.groupId}.demo.app",
            '-o', atraceSdcard
    doFirst {
        standardOutput = System.out
        errorOutput = System.err
    }
}

task testAtracePull(type: Exec, dependsOn: testAtrace) {
    commandLine 'adb', 'pull', atraceSdcard, "${traceDir.toAbsolutePath()}"
    doFirst {
        if (!traceDir.toFile().exists()) {
            traceDir.toFile().mkdirs()
        }
    }
    doFirst {
        standardOutput = System.out
        errorOutput = System.err
    }
}

task testAtraceClean(type: Exec, dependsOn: testAtracePull) {
    commandLine 'adb', 'shell', 'rm', atraceSdcard
    doFirst {
        standardOutput = System.out
        errorOutput = System.err
    }
}

task testSystrace(type: Exec, dependsOn: testAtraceClean) {
    commandLine 'python', "${systracePython.toAbsolutePath()}",
            '--from-file', "${atraceProject.toAbsolutePath()}",
            '-o', "${systraceProject.toAbsolutePath()}"
    doFirst {
        standardOutput = System.out
        errorOutput = System.err
    }
}

task testDemo(dependsOn: testSystrace) {
}