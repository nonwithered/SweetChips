import java.nio.file.Files
import java.nio.file.Paths

def time = 10

def atraceName = 'a.trace'

def systraceName = 'a.html'

def atraceSdcard = '/sdcard/a.trace'

def traceDir = projectDir.toPath()
        .resolve('build')
        .resolve('trace')

def atraceProject = traceDir
        .resolve(atraceName)

def systraceProject = traceDir
        .resolve(systraceName)

def sdkDir = Paths.get(System.getenv('ANDROID_HOME'))

def systracePython = sdkDir
        .resolve('platform-tools')
        .resolve('systrace')
        .resolve('systrace.py')

def apkFile = projectDir.toPath()
        .resolve('build')
        .resolve('outputs')
        .resolve('apk')
        .resolve('debug')
        .resolve('demo-debug.apk')


task testDepends() {
    if (!Files.exists(apkFile)) {
        dependsOn ':demo:installDebug'
    }
}

task testAtrace(type: Exec, dependsOn: testDepends) {
    commandLine 'adb', 'shell', 'atrace',
            '-t', "$time",
            '-a', 'org.sweetchips.demo',
            '-o', atraceSdcard
    doFirst {
        standardOutput = System.out
        errorOutput = System.err
    }
}

task testAtracePull(type: Exec, dependsOn: testAtrace) {
    commandLine 'adb', 'pull', atraceSdcard, "${traceDir.toAbsolutePath()}"
    doFirst {
        if (!Files.exists(traceDir)) {
            Files.createDirectories(traceDir)
        }
    }
    doFirst {
        standardOutput = System.out
        errorOutput = System.err
    }
}

task testAtraceClean(type: Exec, dependsOn: testAtracePull) {
    commandLine 'adb', 'shell', 'rm', atraceSdcard
    doFirst {
        standardOutput = System.out
        errorOutput = System.err
    }
}

task testSystrace(type: Exec, dependsOn: testAtraceClean) {
    commandLine 'python', "${systracePython.toAbsolutePath()}",
            '--from-file', "${atraceProject.toAbsolutePath()}",
            '-o', "${systraceProject.toAbsolutePath()}"
    doFirst {
        standardOutput = System.out
        errorOutput = System.err
    }
}

task testDemo(dependsOn: testSystrace) {
}