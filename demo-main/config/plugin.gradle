import java.util.concurrent.ConcurrentHashMap

if (gradle.ext.existsBuildTarget('gradle-java')) {
    apply plugin: 'SweetChips-java'
    SweetChips {
        addTransform 'mainA', incremental: false
        addTransform 'mainB', incremental: true
        addTransform 'mainC'
        addTransform 'mainD'
    }
    mainA {
        transform {
            first adapt('org.sweetchips.annotationsvisitors.HideTransformClassNode')
            first adapt('org.sweetchips.annotationsvisitors.UncheckcastTransformClassNode')
        }
        prepare {
            before {
                println 'before'
            }
            after {
                println 'after'
            }
        }
        transform {
            before {
                println 'before'
            }
            after {
                println 'after'
            }
        }
    }
    mainC {
        prepare {
            before {
                it.put('org.sweetchips.annotations.Inline', new ConcurrentHashMap<>())
            }
            last adapt('org.sweetchips.annotationsvisitors.InlinePrepareClassNode')
        }
        transform {
            last adapt('org.sweetchips.annotationsvisitors.InlineTransformClassNode')
            after {
                it.remove('org.sweetchips.annotations.Inline')
            }
        }
    }
    if (gradle.ext.existsBuildTarget('plugin-sourceline-eraser')) {
        apply plugin: 'SourceLineEraser'
        SourceLineEraser {
            attach 'mainB'
        }
    }
    if (gradle.ext.existsBuildTarget('plugin-const-sweeper')) {
        apply plugin: 'ConstSweeper'
        ConstSweeper {
            attach 'mainB'
            ignore 'org.sweetchips.demo.main.TestConst$CheckInternal'
            notice 'org.sweetchips.demo.main.TestConst$CheckInternal#sNotice'
        }
    }
    if (gradle.ext.existsBuildTarget('plugin-recursive-tail')) {
        apply plugin: 'RecursiveTail'
        RecursiveTail {
            attach 'mainB'
            ignore 'org.sweetchips.demo.main.TestTail#over'
        }
    }
    if (gradle.ext.existsBuildTarget('plugin-inline-tailor')) {
        apply plugin: 'InlineTailor'
        InlineTailor {
            attach 'mainB'
        }
    }
}