buildscript {
    repositories {
        maven {
            url gradle.buildUri
        }
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$gradle.ext.versions.gradleApi"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$gradle.ext.versions.kotlin"
        [
                'gradle-android',
                'gradle-java',
                'plugin-annotations-visitors',
                'plugin-trace-weaver',
                'plugin-const-sweeper',
                'plugin-sourceline-eraser',
                'plugin-inline-tailor',
                'plugin-recursive-tail',
        ].forEach {
            if (gradle.existsBuildTarget(it)) {
                classpath "$gradle.ext.groupId:$it:$gradle.ext.versions.root"
            }
        }
    }
}

allprojects {
    repositories {
        maven {
            url gradle.buildUri
        }
        google()
        jcenter()
    }
}

def cmdMvn = gradle.ext.isWindows()
        ? 'mvn.cmd'
        : 'mvn'

task cleanMvn(type: Exec) {
    commandLine "$cmdMvn", 'clean'
    doFirst {
        standardOutput = System.out
        errorOutput = System.err
    }
}

task clean(type: Delete, dependsOn: cleanMvn) {
    delete rootProject.buildDir
}

task deployMvn(type: Exec) {
    commandLine "$cmdMvn", 'deploy', '-e'
    doFirst {
        standardOutput = System.out
        errorOutput = System.err
    }
}